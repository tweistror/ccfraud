parameters:
  usv_train_size: 5000
  sv_train_size: 5000
  sv_train_fraud_percentage: 0.04
  test_benign_count: 2000
  test_fraud_count: 2000
  ocan:
    mb_size: 70
    d_dim: [dim_input, 256, 64, 2]
    g_dim: [64, 256, dim_input]
    hid_dim: [400]
    epochs: 200
  ocan_ae:
    d_dim: [dim_input, 256, 64, 2]
    g_dim: [64, 256, dim_input]
    ae_epochs: 50
  autoencoder:
    dims: [dim_input, 128, 32]
    epochs: 5
    batch_size: 32
    train_test_split: 0.2
    learning_rate: 1e-3
    activation_fct: 'relu'
    output_activation_fct: 'sigmoid'
    optimizer: 'adam'
    loss: 'binary_crossentropy'
    kernel_regularizer: 'None'
    activity_regularizer: 'None'
  vae:
    epochs: 20
    batch_size: 32
    intermediate_dim: 128
    latent_dim: 32
    activation_fct: 'relu'
    optimizer: 'adam'
    loss: 'mean_squared_error'
    train_test_split: 0.2
  dae:
    dims: [dim_input, 128, 32]
    epochs: 7
    batch_size: 32
    train_test_split: 0.2
    learning_rate: 1e-3
    activation_fct: 'relu'
    output_activation_fct: 'sigmoid'
    optimizer: 'adam'
    loss: 'binary_crossentropy'
    kernel_regularizer: 'None'
    activity_regularizer: 'None'
    noise_factor: 0.2
  rbm:
    num_hidden: 180
    visible_unit_type: 'bin' # bin or gauss
    gibbs_sampling_steps: 1
    learning_rate: 0.01
    momentum: 0.9
    l2: 0.001
    batch_size: 10
    epochs: 10
    stddev: 0.1
    train_test_split: 0.2
mode:
  anomaly_number: 8
  train_mode: rest # specify training method: `anomaly` = training only on anomaly_number, 'rest' = training on rest
path:
  train_labels: './data/mnist/train-labels-idx1-ubyte'
  train_images: './data/mnist/train-images-idx3-ubyte'
  test_labels: './data/mnist/t10k-labels-idx1-ubyte'
  test_images: './data/mnist/t10k-images-idx3-ubyte'
metadata:
  source: 'http://yann.lecun.com/exdb/mnist/'
  features: 784
  train_size: 60000
  test_size: 10000
